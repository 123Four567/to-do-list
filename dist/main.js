(()=>{"use strict";class e{constructor(e){this.name=e,this.taskList=[]}addTask(e){this.taskList.push(e)}getTasks(){return this.taskList}}class t{constructor(e,t,n){this.name=e,this.date=t,this.description=n}getName(){return this.name}getDate(){return this.date}getDescription(){return this.description}}const n=function(e,t){return e.find((e=>e.name==t))},s=function(e){const n=document.querySelector(".task-form"),s=document.querySelector("#input-task-name").value,c=document.querySelector("#input-task-date").value,r=document.querySelector("#input-task-description").value,d=new t(s,c,r);n.reset(),e.addTask(d)},c=function(t){const n=document.querySelector(".project-form"),s=document.querySelector("#input-project-name").value,c=new e(s);n.reset(),t.push(c)},r=function(){let e=0;return{renderTasks:function(t){const n=document.querySelector(".task-view");n.innerHTML="";let s=t.getTasks();const c=document.createElement("h2");c.textContent="Tasks",n.appendChild(c),s.forEach((t=>{const s=document.createElement("div");s.classList.add("task-container"),s.dataset.id=e;const c=document.createElement("div");c.classList.add("show-task-name"),c.textContent=t.name,s.appendChild(c);const r=document.createElement("div");r.classList.add("show-task-date"),r.textContent=t.date,s.appendChild(r);const d=document.createElement("div");r.classList.add("show-task-description"),d.textContent=t.description,s.appendChild(d);const o=document.createElement("button");o.classList.add("delete-task"),o.textContent="Delete",s.appendChild(o),e+=1,n.appendChild(s)})),e=0;const r=document.createElement("button");r.classList.add("new-task"),r.textContent="Create new task",n.appendChild(r),r.addEventListener("click",(()=>{const e=document.querySelector(".task-hidden");e.classList.remove("task-hidden"),e.setAttribute("id","task-form-view")}))},renderProjects:function(e){const t=document.querySelector(".project-nav");t.innerHTML="",e.forEach((e=>{const n=document.createElement("li");n.textContent=e.name,t.appendChild(n)}))}}}();!function(){let t=[new e("default")],d="default";const o=document.querySelector(".submit-task");function a(e){const t=document.querySelectorAll(".delete-task");Array.from(t).forEach((t=>{t.addEventListener("click",(t=>{e.getTasks().splice(t.target.parentElement.dataset.id,1),r.renderTasks(e),a(e)}))}))}document.querySelector(".new-task").addEventListener("click",(()=>{const e=document.querySelector(".task-hidden");e.setAttribute("id","task-form-view"),e.classList.remove("task-hidden")})),o.addEventListener("click",(e=>{e.preventDefault();const c=document.getElementById("task-form-view");c.classList.add("task-hidden"),c.removeAttribute("id"),document.querySelector(".new-task").addEventListener("click",(()=>{const e=document.querySelector(".task-hidden");e.setAttribute("id","task-form-view"),e.classList.remove("task-hidden")})),s(n(t,d)),r.renderTasks(n(t,d)),a(n(t,d))}));const i=document.querySelector(".submit-project");document.querySelector(".new-project").addEventListener("click",(()=>{const e=document.querySelector(".project-hidden");e.setAttribute("id","project-form-view"),e.classList.remove("project-hidden")})),i.addEventListener("click",(e=>{e.preventDefault(),c(t),r.renderProjects(t);const s=document.getElementById("project-form-view");s.classList.add("project-hidden"),s.removeAttribute("id"),document.querySelector(".new-project").addEventListener("click",(()=>{const e=document.querySelector(".project-hidden");e.setAttribute("id","project-form-view"),e.classList.remove("project-hidden")}));const o=document.querySelectorAll("li");Array.from(o).forEach((e=>{e.addEventListener("click",(e=>{d=e.target.textContent,r.renderTasks(n(t,d))}))}))}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,